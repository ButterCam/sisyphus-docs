"use strict";(self.webpackChunksisyphus_docs=self.webpackChunksisyphus_docs||[]).push([[9805],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(n),v=i,m=u["".concat(c,".").concat(v)]||u[v]||d[v]||a;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4261:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:3},s="Service Discover",o={unversionedId:"advanced-guides/service-discover",id:"advanced-guides/service-discover",title:"Service Discover",description:"We already know that invoking of Service is implemented by Schema.",source:"@site/docs/advanced-guides/service-discover.md",sourceDirName:"advanced-guides",slug:"/advanced-guides/service-discover",permalink:"/docs/advanced-guides/service-discover",draft:!1,editUrl:"https://github.com/ButterCam/sisyphus-docs/edit/main/docs/advanced-guides/service-discover.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Sisyphus Project Plugin",permalink:"/docs/advanced-guides/sisyphus-project-plugin"},next:{title:"AIP with Sisyphus",permalink:"/docs/advanced-guides/aip-spec"}},c={},l=[{value:"Local Service Discovery",id:"local-service-discovery",level:2},{value:"Service discovery in k8s cluster",id:"service-discovery-in-k8s-cluster",level:2},{value:"Other implementations",id:"other-implementations",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"service-discover"},"Service Discover"),(0,i.kt)("p",null,"We already know that invoking of ",(0,i.kt)("strong",{parentName:"p"},"Service")," is implemented by ",(0,i.kt)("strong",{parentName:"p"},"Schema"),"."),(0,i.kt)("p",null,"Sisyphus automatically discovers local services with services in the k8s cluster and creates client beans."),(0,i.kt)("h2",{id:"local-service-discovery"},"Local Service Discovery"),(0,i.kt)("p",null,"Since an ",(0,i.kt)("strong",{parentName:"p"},"Application")," may contain multiple ",(0,i.kt)("strong",{parentName:"p"},"Services"),", Sisyphus uses the local service discovery mechanism to\nhandle these requests when ",(0,i.kt)("strong",{parentName:"p"},"Services")," within the same ",(0,i.kt)("strong",{parentName:"p"},"Application")," call each other."),(0,i.kt)("p",null,"Sisyphus automatically creates corresponding gRPC clients for all classes contained in the Spring context marked by\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"@RpcServiceImpl")," annotation, and only needs to use ",(0,i.kt)("inlineCode",{parentName:"p"},"@Autowire")," to inject the corresponding clients."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Autowire\nlateinit var userApi: UserApi.Client\n")),(0,i.kt)("p",null,"These clients are linked via the built-in ",(0,i.kt)("inlineCode",{parentName:"p"},"InProcessServer"),", there is no additional network communication loss, and\neach call is also a full gRPC call that also goes through serialization, configured interceptors, etc. This maintains\nconsistency between calls to the local service and the external service."),(0,i.kt)("h2",{id:"service-discovery-in-k8s-cluster"},"Service discovery in k8s cluster"),(0,i.kt)("p",null,"In addition, if the ",(0,i.kt)("inlineCode",{parentName:"p"},"sisyphus-grpc-client-kubernetes")," package added to the dependencies of application, Sisyphus will\nalso automatically discover other services in the k8s cluster where the runtime environment is located and create the\ncorresponding client."),(0,i.kt)("p",null,"Sisyphus will try to find a Service with a tag like ",(0,i.kt)("inlineCode",{parentName:"p"},"sisyphus/google.rpc.showcase.Echo")," in the same namespace and use\nits value as the access interface to create the client."),(0,i.kt)("p",null,"Similarly, the corresponding client can be injected simply by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"@Autowire")," annotation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Autowire\nlateinit var userApi: UserApi.Client\n")),(0,i.kt)("h2",{id:"other-implementations"},"Other implementations"),(0,i.kt)("p",null,"In the future, Sisyphus will add support for more popular open source registries like Eureka, Zookeeper, Spring Cloud,\netc. to enable smarter service discovery."))}d.isMDXComponent=!0}}]);