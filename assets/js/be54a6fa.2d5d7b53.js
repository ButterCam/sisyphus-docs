"use strict";(self.webpackChunksisyphus_docs=self.webpackChunksisyphus_docs||[]).push([[8016],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,h=m["".concat(l,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(h,p(p({ref:t},d),{},{components:n})):a.createElement(h,p({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var s=2;s<i;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3069:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:2},p="Sisyphus Project Plugin",o={unversionedId:"advanced-guides/sisyphus-project-plugin",id:"advanced-guides/sisyphus-project-plugin",title:"Sisyphus Project Plugin",description:"Sisyphus Project Plugin (hereafter referred to as the plugin) is a Gradle plugin for quickly creating Sisyphus",source:"@site/docs/advanced-guides/sisyphus-project-plugin.md",sourceDirName:"advanced-guides",slug:"/advanced-guides/sisyphus-project-plugin",permalink:"/docs/advanced-guides/sisyphus-project-plugin",draft:!1,editUrl:"https://github.com/ButterCam/sisyphus-docs/edit/main/docs/advanced-guides/sisyphus-project-plugin.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Project structure",permalink:"/docs/advanced-guides/project-structure"},next:{title:"Service Discover",permalink:"/docs/advanced-guides/service-discover"}},l={},s=[{value:"Apply the plugin",id:"apply-the-plugin",level:2},{value:"Using gradle.properties",id:"using-gradleproperties",level:2},{value:"Development Layer",id:"development-layer",level:2},{value:"Version replacement of dependencies layer",id:"version-replacement-of-dependencies-layer",level:3},{value:"Development Layer in ButterCam",id:"development-layer-in-buttercam",level:3},{value:"Project properties hosted by Sisyphus",id:"project-properties-hosted-by-sisyphus",level:2},{value:"Third-party plugins hosted by Sisyphus",id:"third-party-plugins-hosted-by-sisyphus",level:2},{value:"Nebula plugins",id:"nebula-plugins",level:3},{value:"Docker plugin",id:"docker-plugin",level:3},{value:"Ktlint plugin",id:"ktlint-plugin",level:3},{value:"Antlr Plugin",id:"antlr-plugin",level:3}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sisyphus-project-plugin"},"Sisyphus Project Plugin"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Sisyphus Project Plugin")," (hereafter referred to as ",(0,r.kt)("inlineCode",{parentName:"p"},"the plugin"),") is a Gradle plugin for quickly creating Sisyphus\nprojects, allowing for more automated configuration of Gradle projects."),(0,r.kt)("p",null,"The plugin can automatically configure third-party plugins in an intuitive form, reducing configuration\nin ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle.kts"),"."),(0,r.kt)("h2",{id:"apply-the-plugin"},"Apply the plugin"),(0,r.kt)("p",null,"Simply add the project plugin to ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle.kts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'plugins {\n  id("com.bybutter.sisyphus.project") version "1.5.22"\n}\n')),(0,r.kt)("p",null,"Or use the traditional Gradle plugin apply dsl."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'buildscript {\n  repositories {\n    maven {\n      url = uri("https://plugins.gradle.org/m2/")\n    }\n  }\n  dependencies {\n    classpath("com.bybutter.sisyphus.tools:sisyphus-project-gradle-plugin:1.5.22")\n  }\n}\n\napply(plugin = "com.bybutter.sisyphus.project")\n')),(0,r.kt)("h2",{id:"using-gradleproperties"},"Using gradle.properties"),(0,r.kt)("p",null,"The plugin is configured using the ",(0,r.kt)("inlineCode",{parentName:"p"},"gradle.properties")," file, where you can configure the plugin's parameters in\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"gradle.properties")," file."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"gradle.properties")," file in the global ",(0,r.kt)("inlineCode",{parentName:"p"},"GRADLE_USER_HOME")," directory (usually ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.gradle/"),") or in the project project\nis read by Gradle and the plugin is automatically configured with these parameters."),(0,r.kt)("p",null,"You can define all project common parameters in the global ",(0,r.kt)("inlineCode",{parentName:"p"},"gradle.properties")," or project specific parameters in\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"gradle.properties")," under the project project."),(0,r.kt)("p",null,"The following properties can all be used to configure the plugin."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.developer=(your name)"),(0,r.kt)("br",{parentName:"p"}),"\n","Specify the developer's name, which will override the final project version number, e.g. if you specify the properties\nas ",(0,r.kt)("inlineCode",{parentName:"p"},"higan"),", the final version number generated will be ",(0,r.kt)("inlineCode",{parentName:"p"},"higan-SNAPSHOT"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Unifying version numbers in development environments facilitates multiple project development and synchronizes\ndependencies via dependency override plugins.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.layer=(FRAMEWORK, PLATFORM, API, IMPLEMENTATION)"),(0,r.kt)("br",{parentName:"p"}),"\n","Specify the depth of the development layer. You can specify four values ",(0,r.kt)("inlineCode",{parentName:"p"},"FRAMEWORK"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"PLATFORM"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"API"),"\n, ",(0,r.kt)("inlineCode",{parentName:"p"},"IMPLEMENTATION"),", which represent the four development layers from deep to shallow. The default value\nis ",(0,r.kt)("inlineCode",{parentName:"p"},"IMPLEMENTATION"),", and we will focus on the development layer in later sections.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.environment=(env name)"),(0,r.kt)("br",{parentName:"p"}),"\n","Specify the current running environment, this property will be read by the ",(0,r.kt)("strong",{parentName:"p"},"Config Artifact")," component and read the\ncorresponding configuration file, for example when specifying the environment as ",(0,r.kt)("inlineCode",{parentName:"p"},"dev"),", in addition to ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml"),"\nbeing read, ",(0,r.kt)("inlineCode",{parentName:"p"},"config-dev.yaml")," will also be read by the ",(0,r.kt)("strong",{parentName:"p"},"Config Artifact")," and overwrite ",(0,r.kt)("inlineCode",{parentName:"p"}," config.yaml"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.repositories.<name>.url=(repo url)"),(0,r.kt)("br",{parentName:"p"}),"\n","Define a URL for the Repository that can be used to specify the address of a Maven repository. The type of repository\nis not required, it can be either a Maven repository or a Docker repository, the exact type of repository will only\nmake sense in subsequent use.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.repositories.<name>.username=(username)"),(0,r.kt)("br",{parentName:"p"}),"\n","Specify the username of a Repository.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.repositories.<name>.password=(password)"),(0,r.kt)("br",{parentName:"p"}),"\n","Specify the password for a Repository.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.dependency.repositories=(repos)"),(0,r.kt)("br",{parentName:"p"}),"\n","Specify the repositories used to resolve dependencies that are automatically configured to all projects that have\nplugins applied to them, and can omit the ",(0,r.kt)("inlineCode",{parentName:"p"},"repositories")," configuration in ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle.kts"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Also, ",(0,r.kt)("strong",{parentName:"p"},"Config Artifact")," is downloaded from these repositories, and the type of repository filled in must be a valid\nmaven repository. The format is a comma-separated name of the defined repository. The default value\nis ",(0,r.kt)("inlineCode",{parentName:"p"},"local,central,portal"),".",(0,r.kt)("br",{parentName:"p"}),"\n","For maven repositories, the plugin has three built-in repositories ",(0,r.kt)("strong",{parentName:"p"},"local"),"(maven local), ",(0,r.kt)("strong",{parentName:"p"},"central"),"(maven central)\n, ",(0,r.kt)("strong",{parentName:"p"},"portal"),"(gradle portal).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.snapshot.repositories=(repos)"),(0,r.kt)("br",{parentName:"p"}),"\n","Specify the maven repositories that need to be pushed for SNAPSHOT versions, these repositories will be automatically\nconfigured to all project publishing configurations if the current project version number ends with ",(0,r.kt)("inlineCode",{parentName:"p"},"-SNAPSHOT"),". The\ndefault value is ",(0,r.kt)("inlineCode",{parentName:"p"},"snapshot"),", which means that only one repository named ",(0,r.kt)("inlineCode",{parentName:"p"},"snapshot")," needs to be set to be applied\nautomatically.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.release.repositories=(repos)"),(0,r.kt)("br",{parentName:"p"}),"\n","Similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.snapshot.repositories"),", but specify the maven repositories that need to be pushed for the release\nversion, and is automatically configured when the project version number does not end in ",(0,r.kt)("inlineCode",{parentName:"p"},"-SNAPSHOT"),". The default\nis ",(0,r.kt)("inlineCode",{parentName:"p"},"release"),", which means that only one repository named ",(0,r.kt)("inlineCode",{parentName:"p"},"release")," needs to be set to be applied automatically.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.docker.repositories=(repos)"),"\nSpecify Docker repositories that are automatically configured into the Gradle Docker plugin, generating the\ncorresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"tag"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"push")," tasks.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.config.artifacts=(packages)"),"\nSpecify the ",(0,r.kt)("strong",{parentName:"p"},"Config Artifacts")," that need to be loaded at runtime, which are automatically downloaded\nfrom ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.dependency.repositories")," at application startup. The format is a string like ",(0,r.kt)("inlineCode",{parentName:"p"},"foo.bar:baz:1.0.0"),",\nseparated by commas when there are multiple ",(0,r.kt)("strong",{parentName:"p"},"Config Artifacts"),"."))),(0,r.kt)("h2",{id:"development-layer"},"Development Layer"),(0,r.kt)("p",null,"We mentioned above the concept of development layer configured via ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.layer"),", and during project development we\ncan split dependencies into multiple layers in order to simplify the management of dependency matching in the\ndevelopment environment."),(0,r.kt)("p",null,"In this case, Sisyphus has divided the development layer depth into four layers."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},"FRAMEWORK")," layer is the framework development layer and is the deepest development layer where all internal\ndependencies are replaced with development versions when developing towards a framework.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},"PLATFORM")," layer is the platform development layer, is the next deepest development layer, the platform is the\nabstraction for the framework, in most cases is included in some departments for the framework of some common\ncomponents.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},"API")," layer is the API development layer, is the next shallow development layer, all API dependencies will be\nreplaced with the development version.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("strong",{parentName:"p"},"IMPLEMENTATION")," layer is the shallowest layer, and the default development layer, this layer of development\nwill not be any dependency replacement, and does not need to be defined."))),(0,r.kt)("admonition",{title:"Tips",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Deeper tiers will contain shallower tiers, for example the ",(0,r.kt)("strong",{parentName:"p"},"FRAMEWORK")," tier will also replace all ",(0,r.kt)("strong",{parentName:"p"},"PLATFORM")," and ",(0,r.kt)("strong",{parentName:"p"},"\nAPI")," tier dependencies.")),(0,r.kt)("h3",{id:"version-replacement-of-dependencies-layer"},"Version replacement of dependencies layer"),(0,r.kt)("p",null,"The main purpose of layering dependencies is to be able to manage them, and the following DSL can be used to mark\ndependencies hierarchically."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n  frameworkLayer(api("com.bybutter.sisyphus.starter:sisyphus-grpc-server-starter:1.5.22"))\n  platformLayer(api("com.bybutter.sisyphus.kit:camera-grpc-server-autoconfigure:1.2.1"))\n  apiLayer(api("com.bybutter.camera.api:camera-user-api:1.7.12"))\n}\n')),(0,r.kt)("p",null,"Mark the layers with ",(0,r.kt)("inlineCode",{parentName:"p"},"frameworkLayer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"platformLayer")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"apiLayer")," and use the released version in them."),(0,r.kt)("p",null,"When we do local development, we modify the code in the dependency project and push it to maven local. When we want the\nproject to use the version we just compiled, we usually need to go to ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle.kts")," to change the dependency\nversion number, and this change can easily be forgotten later on."),(0,r.kt)("p",null,"In order to replace the version of the dependency in ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle.kts")," without modifying it, we mark the dependency to\nthe specified level, for example with ",(0,r.kt)("inlineCode",{parentName:"p"},"apiLayer")," to the ",(0,r.kt)("strong",{parentName:"p"},"API")," level, and when ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.layer")," is set to the ",(0,r.kt)("strong",{parentName:"p"},"API"),"\nlevel or deeper, all ",(0,r.kt)("strong",{parentName:"p"},"API")," dependencies will be replaced with version number determined by ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.developer"),", for\nexample: ",(0,r.kt)("inlineCode",{parentName:"p"},"higan-SNAPSHOT"),"."),(0,r.kt)("h3",{id:"development-layer-in-buttercam"},"Development Layer in ButterCam"),(0,r.kt)("p",null,"Sisyphus has no special rules for the use of development tiers, as defined by the respective projects and projects, but\nhere is a description of how these tiers are used inside ButterCam."),(0,r.kt)("p",null,"For ButterCam, the ",(0,r.kt)("strong",{parentName:"p"},"FRAMEWORK")," layer refers to Sisyphus, and we will mark all Sisyphus open source library\ndependencies as such."),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"PLATFORM")," layer refers to ButterCam's internal closed-source components for Sisyphus that are deeply related to\nButterCam's current technology stack and business, and can provide some convenience for internal use."),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"API")," layer refers to all of our proto definitions, and we keep all of our proto files in a separate project that\nis shared by all teams, so that the front-end, client, and back-end can all participate in the process of writing proto.\nThe back-end ",(0,r.kt)("strong",{parentName:"p"},"Schema")," components will depend on these proto-only jar packages, and these dependencies will be marked\nas such."),(0,r.kt)("admonition",{title:"mention",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("strong",{parentName:"p"},"PLATFORM")," layer inside ButterCam are some highly coupled tool classes and some common service configurations, and\nwe are using the same open source Sisyphus version for business development as everyone else.")),(0,r.kt)("h2",{id:"project-properties-hosted-by-sisyphus"},"Project properties hosted by Sisyphus"),(0,r.kt)("p",null,"When the plugin is applied, some properties of the project will be hosted by Sisyphus, and some custom properties may be\noverridden at this time."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"project.version"),", the project version will be determined by several factors",(0,r.kt)("br",{parentName:"p"}),"\n","The property ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.developer")," determines the version number of the development environment, in the\nformat ",(0,r.kt)("inlineCode",{parentName:"p"},"{name}-SNAPSHOT"),(0,r.kt)("br",{parentName:"p"}),"\n","The environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"BRANCH_NAME")," determines the version number of the development branch, typically used in CI\nenvironments, in the format ",(0,r.kt)("inlineCode",{parentName:"p"},"{branch}-SNAPSHOT"),"\nThe environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"GITHUB_REF")," determines the version number of the PR, typically used in CI environments, in\nthe format ",(0,r.kt)("inlineCode",{parentName:"p"},"PR-{PR_NUMBER}-SNAPSHOT"),"\nThe environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"TAG_NAME")," determines the version number of the Release, usually used in CI environments, in\nthe format ",(0,r.kt)("inlineCode",{parentName:"p"},"{tag}"),"\nThe environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"BUILD_VERSION")," determines the version number of the Release, typically used in CI\nenvironments, in the format ",(0,r.kt)("inlineCode",{parentName:"p"},"{BUILD_VERSION}"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"project.repositories"),", the project's maven repository will be hosted by the\nsisyphus ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.dependency.repositories")," property in ",(0,r.kt)("inlineCode",{parentName:"p"},"gradle.properties")))),(0,r.kt)("h2",{id:"third-party-plugins-hosted-by-sisyphus"},"Third-party plugins hosted by Sisyphus"),(0,r.kt)("p",null,"Plugins can also help us configure third-party plugins such as Publish, Docker, License, etc. in an intuitive way."),(0,r.kt)("h3",{id:"nebula-plugins"},"Nebula plugins"),(0,r.kt)("p",null,"For JavaLibrary type projects, Sisyphus will automatically apply the ",(0,r.kt)("inlineCode",{parentName:"p"},"nebula.maven-publish"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"nebula.javadoc-jar"),"\nand ",(0,r.kt)("inlineCode",{parentName:"p"},"nebula.source-jar")," plugins if the Gradle runtime environment has the Nebula family of plugins, depending on the\nversion number. Depending on the version number, the target repositories defined by ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.release.repositories"),"\nand ",(0,r.kt)("inlineCode",{parentName:"p"},"sisyphus.snaphost.repositories")," are automatically configured."),(0,r.kt)("p",null,"For JavaPlatform type projects, only the ",(0,r.kt)("inlineCode",{parentName:"p"},"nebula.maven-publish")," plugin is automatically applied."),(0,r.kt)("p",null,"For projects with the ",(0,r.kt)("inlineCode",{parentName:"p"},"nebula.maven-publish")," plugin applied, the ",(0,r.kt)("inlineCode",{parentName:"p"},"nebula.info")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"nebula.contacts")," plugins are\nadditionally applied to populate the generated pom information."),(0,r.kt)("p",null,"In addition, when gradle.properties contains ",(0,r.kt)("inlineCode",{parentName:"p"},"signing.gnupg.keyName"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"signing")," plugin is also applied to generate\npackage signatures, as described in the ","[documentation for the signing plugin]","(",(0,r.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/"},"https://docs.gradle.org/current/"),"\nuserguide/signing_plugin.html)."),(0,r.kt)("h3",{id:"docker-plugin"},"Docker plugin"),(0,r.kt)("p",null,"For JavaApplication type projects, if the Gradle runtime environment\nhas ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bmuschko/gradle-docker-plugin"},"Docker plugin"),", Sisyphus will automatically\napply ",(0,r.kt)("inlineCode",{parentName:"p"},"com.bmuschko. docker-remote-api")," plugin."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"automatically generates a Dockerfile for building the image"),(0,r.kt)("li",{parentName:"ol"},"use Spring Boot's ",(0,r.kt)("inlineCode",{parentName:"li"},"bootJar")," layering feature to automatically layer in dependent jar packages when building images,\nincreasing the reuse of image layers and reducing image size"),(0,r.kt)("li",{parentName:"ol"},"all projects and files in the docker folder of the parent project are added to the working directory of\nthe ",(0,r.kt)("inlineCode",{parentName:"li"},"docker build")," command. 4."),(0,r.kt)("li",{parentName:"ol"},"automatically configure the repository tags for the Docker plugin to be pushed via ",(0,r.kt)("inlineCode",{parentName:"li"},"sisyphus.docker.repositories"),"."),(0,r.kt)("li",{parentName:"ol"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"PROJECT_NAME")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"PROJECT_VERSION")," to the Docker build parameters.")),(0,r.kt)("h3",{id:"ktlint-plugin"},"Ktlint plugin"),(0,r.kt)("p",null,"If ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JLLeitschuh/ktlint-gradle"},"Ktlint plugin")," is applied to the current project, Sisyphus will\nautomatically provide some configuration."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ignore all files in the generated directory."),(0,r.kt)("li",{parentName:"ol"},"Set the ReportType to ",(0,r.kt)("strong",{parentName:"li"},"CHECKSTYLE"),".")),(0,r.kt)("h3",{id:"antlr-plugin"},"Antlr Plugin"),(0,r.kt)("p",null,"If ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gradle.org/current/userguide/antlr_plugin.html"},"Antlr plugin")," is applied to the current project,\nSisyphus will provide some configurations automatically."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add Antlr's ",(0,r.kt)("inlineCode",{parentName:"li"},"generateGrammarSource")," task to Kotlin's compilation dependencies, and ",(0,r.kt)("inlineCode",{parentName:"li"},"generateGrammarSource")," will be\nexecuted automatically when Kotlin is compiled.")))}u.isMDXComponent=!0}}]);