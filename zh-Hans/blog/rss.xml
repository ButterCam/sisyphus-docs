<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Sisyphus Blog</title>
        <link>https://sisyphus.bybutter.com/zh-Hans/blog</link>
        <description>Sisyphus Blog</description>
        <lastBuildDate>Tue, 18 Oct 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[全新的 Docker 插件]]></title>
            <link>https://sisyphus.bybutter.com/zh-Hans/blog/new-docker-plugin</link>
            <guid>new-docker-plugin</guid>
            <pubDate>Tue, 18 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[在 Sisyphus 1.5.20 中，我们对 Docker 插件进行了进一步地优化，使其更加易用。]]></description>
            <content:encoded><![CDATA[<p>在 Sisyphus 1.5.20 中，我们对 Docker 插件进行了进一步地优化，使其更加易用。</p><p>涉及到更改基础 Docker 插件、自动生成 Dockerfile 和支持 Spring 分层构建几项主要调整。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="事情起因">事情起因<a class="hash-link" href="#事情起因" title="标题的直接链接">​</a></h2><p>我们一直都是使用 Github Action 来作为我们的 CI 工具，在创建 PullRequest 的时候，CI 会自动编译出 SNAPSHOT 版本镜像用于部署测试环境。在
PR 合并之后，CI 则会编译出带有分支名的 SNAPSHOT 版本用于部署 beta 环境。而最后创建 Release 时，才会真正编译出最终的部署镜像。</p><p>可见在整个流程中，我们需要构建三次镜像，每次构建都需要 40 分钟左右，从提出 PR 到最后的发版上线可能需要接近两个小时的时间。</p><p>而且由于最近 CI 流水线资源占用的问题，我们的后端服务一次构建过程已经到了需要三个小时的程度，所以在 CI
流水线资源问题解决之前，我们只能尽力优化我们的 CI 流程。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="优化过程">优化过程<a class="hash-link" href="#优化过程" title="标题的直接链接">​</a></h2><p>首先，在实际使用过程中，PR 构建出的 SNAPSHOT 版本镜像一般都没用上，大多数情况都是使用开发者本地构建的镜像部署测试环境，所以我们可以去掉
PR 的镜像构建步骤，只进行代码检查。</p><p>其次，针对每个分支构建的 SNAPSHOT 版本与最后发版时的 RELEASE
版本其实内容是一样的，但是由于编译环境的微妙区别，导致编译过程没办法缓存下来，每次发版还是需要把分支的构建过程重新运行一次。所以针对这个地方，我们打算复用之前分支更新时所编译出来的镜像。</p><p>在之前的版本中，我们使用 <a href="https://github.com/palantir/gradle-docker" target="_blank" rel="noopener noreferrer">palantir/gradle-docker</a> 作为我们的基础 Docker
插件，我们也为其优化了 tag 任务的设计。</p><p>但是在这次优化过程中，我们发现了他的一些不足，比如没有 docker save 操作，也没有能方便获取当前构建镜像 ID 的方式。</p><p>所以我们将基础 Docker
插件切换到了提供更多底层操作能力的 <a href="https://github.com/bmuschko/gradle-docker-plugin" target="_blank" rel="noopener noreferrer">bmuschko/gradle-docker-plugin</a>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dockerfile-自动化与-spring-分层构建">Dockerfile 自动化与 Spring 分层构建<a class="hash-link" href="#dockerfile-自动化与-spring-分层构建" title="标题的直接链接">​</a></h2><p>在之前的使用中，我们的 Dockerfile 是手动编写的，而新的 Docker 插件提供了自动生成 Dockerfile 的能力，因此我们打算通过插件自动生成
Dockerfile。</p><p>在之前，我们的 Dockerfile 是按照 Spring Boot 的 Layered Jar 的分层编写的，大概是这个样子：</p><div class="language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token instruction keyword" style="color:#00009f">FROM</span><span class="token instruction"> amazoncorretto:17 </span><span class="token instruction keyword" style="color:#00009f">as</span><span class="token instruction"> builder</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ARG</span><span class="token instruction"> PROJECT_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ARG</span><span class="token instruction"> PROJECT_VERSION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENV</span><span class="token instruction"> PROJECT_NAME=</span><span class="token instruction variable" style="color:#36acaa">$PROJECT_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENV</span><span class="token instruction"> PROJECT_VERSION=</span><span class="token instruction variable" style="color:#36acaa">$PROJECT_VERSION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> </span><span class="token instruction string" style="color:#e3116c">"${PROJECT_NAME}-${PROJECT_VERSION}.jar"</span><span class="token instruction"> application.jar</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> java -Djarmode=layertools -jar application.jar extract</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">FROM</span><span class="token instruction"> </span><span class="token instruction options property" style="color:#36acaa">--platform</span><span class="token instruction options punctuation" style="color:#393A34">=</span><span class="token instruction options string" style="color:#e3116c">linux/amd64</span><span class="token instruction"> amd64/amazoncorretto:17</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ARG</span><span class="token instruction"> PROJECT_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ARG</span><span class="token instruction"> PROJECT_VERSION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENV</span><span class="token instruction"> PROJECT_NAME=</span><span class="token instruction variable" style="color:#36acaa">$PROJECT_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENV</span><span class="token instruction"> PROJECT_VERSION=</span><span class="token instruction variable" style="color:#36acaa">$PROJECT_VERSION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> </span><span class="token instruction options property" style="color:#36acaa">--from</span><span class="token instruction options punctuation" style="color:#393A34">=</span><span class="token instruction options string" style="color:#e3116c">builder</span><span class="token instruction"> dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> </span><span class="token instruction options property" style="color:#36acaa">--from</span><span class="token instruction options punctuation" style="color:#393A34">=</span><span class="token instruction options string" style="color:#e3116c">builder</span><span class="token instruction"> spring-boot-loader/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> </span><span class="token instruction options property" style="color:#36acaa">--from</span><span class="token instruction options punctuation" style="color:#393A34">=</span><span class="token instruction options string" style="color:#e3116c">builder</span><span class="token instruction"> sisyphus-dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> </span><span class="token instruction options property" style="color:#36acaa">--from</span><span class="token instruction options punctuation" style="color:#393A34">=</span><span class="token instruction options string" style="color:#e3116c">builder</span><span class="token instruction"> butter-dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> </span><span class="token instruction options property" style="color:#36acaa">--from</span><span class="token instruction options punctuation" style="color:#393A34">=</span><span class="token instruction options string" style="color:#e3116c">builder</span><span class="token instruction"> snapshot-dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> </span><span class="token instruction options property" style="color:#36acaa">--from</span><span class="token instruction options punctuation" style="color:#393A34">=</span><span class="token instruction options string" style="color:#e3116c">builder</span><span class="token instruction"> application/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENTRYPOINT</span><span class="token instruction"> [</span><span class="token instruction string" style="color:#e3116c">"java"</span><span class="token instruction">, </span><span class="token instruction string" style="color:#e3116c">"org.springframework.boot.loader.JarLauncher"</span><span class="token instruction">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Spring Boot 2.3
中加入了 <a href="https://spring.io/blog/2020/08/14/creating-efficient-docker-images-with-spring-boot-2-3" target="_blank" rel="noopener noreferrer">Layered Jar</a>
的支持，可以将各种依赖包与应用程序包进行分层，我们将这个特性用在了 Dockerfile
中，我们将不同的依赖按照更新频率进行分层，把不经常更新的依赖放入底层，经常更新的依赖放入顶层，这样当我们只升级了经常变化的组件时，可以复用之前的底层镜像，从而加快了镜像构建的速度。</p><p>所以我们使用了 Docker 的 builder 模式，在一个临时 Docker 中对 Layered Jar 进行分层解压，然后将解压出来的各个层按照层级顺序复制到最终的镜像中。</p><div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tasks</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">withType</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">BootJar</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   layered </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      application </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token function" style="color:#d73a49">intoLayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"spring-boot-loader"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">include</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">"org</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">springframework</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">boot</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">loader</span><span class="token comment" style="color:#999988;font-style:italic">/**")</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         intoLayer("application")</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">      dependencies {</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         intoLayer("snapshot-dependencies") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">            include("*:*:*SNAPSHOT")</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         intoLayer("sisyphus-dependencies") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">            include("com.bybutter.sisyphus.*:*:*")</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         intoLayer("butter-dependencies") {</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">            include("com.bybutter.*:*:*")</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         intoLayer("dependencies")</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">      layerOrder = listOf(</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         "dependencies",</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         "spring-boot-loader",</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         "sisyphus-dependencies",</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         "butter-dependencies",</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         "snapshot-dependencies",</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         "application"</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">      )</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在上面的配置中，我们大概把代码分成了 6 层：</p><ol><li>dependencies<br>这一层包含了所有的第三方依赖。</li><li>spring-boot-loader<br>这一层包含了 Spring Boot 的启动器。</li><li>sisyphus-dependencies<br>这一层包含了所有 Sisyphus 的依赖，Sisyphus 经常由于业务上的需要，也会做一些迭代升级，所以将其从普通依赖中分离出来。</li><li>butter-dependencies<br>这一层包含了我们的所有内部依赖，和业务密切相关。</li><li>snapshot-dependencies<br>这一层包含了所有的 SNAPSHOT 版本依赖，作为快照版本，在开发过程中可能就会发生变化。</li><li>application<br>这一层包含了业务代码，是更新频率最大的层级。</li></ol><p>新的 Sisyphus Docker 插件会自动从 bootJar 任务中读取分层信息，并生成一个分层解压的任务将 bootJar 分层解压到 Docker
构建的工作目录。</p><p>然后通过 dockerfile 任务生成出构建时需要的 Dockerfile。</p><div class="language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token instruction keyword" style="color:#00009f">ARG</span><span class="token instruction"> PROJECT_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ARG</span><span class="token instruction"> PROJECT_VERSION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">FROM</span><span class="token instruction"> amazoncorretto:17</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENV</span><span class="token instruction"> PROJECT_NAME=</span><span class="token instruction variable" style="color:#36acaa">$PROJECT_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENV</span><span class="token instruction"> PROJECT_VERSION=</span><span class="token instruction variable" style="color:#36acaa">$PROJECT_VERSION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> spring-boot-loader/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> sisyphus-dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> butter-dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> snapshot-dependencies/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">COPY</span><span class="token instruction"> application/ ./</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">RUN</span><span class="token instruction"> true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token instruction keyword" style="color:#00009f">ENTRYPOINT</span><span class="token instruction"> [</span><span class="token instruction string" style="color:#e3116c">"java"</span><span class="token instruction">, </span><span class="token instruction string" style="color:#e3116c">"org.springframework.boot.loader.JarLauncher"</span><span class="token instruction">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="优化-ci-流水线">优化 CI 流水线<a class="hash-link" href="#优化-ci-流水线" title="标题的直接链接">​</a></h2><p>新的 Docker 插件在编译时会自动生成包含镜像 ID 的文件，我们在构建分支 SNAPSHOT 版本过程中收集这些镜像 ID，并存储在 Release
草稿的附件中。</p><p>在最后的 Release 构建过程中，将这些镜像 ID 重新打上最终版本的标签，就能节省编译 Release 版本时的镜像构建时间。</p><p>其实在最开始，我们的初衷是将分支 SNAPSHOT 版本通过 docker save 存为文件再发布为新版本，然而这样做会导致 Release
附件过大，所以最后选择了使用镜像 ID 重新打 tag 的方式。</p>]]></content:encoded>
            <category>docker</category>
            <category>sisyphus-project-plugin</category>
            <category>gradle</category>
            <category>release</category>
        </item>
    </channel>
</rss>